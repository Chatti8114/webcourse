3. 함수

가. 정의
  어떤 일을 수행하는 기능으로써 주어진 인수를 입력받아 처리하여 그 결과를
  반환하는 일을 수행하는 것
  
나. 함수의 종류
  1) 단일행 함수 : 하나의 행당 하나의 결과값을 반환하는 함수
     ex) 문자함수, 날짜함수, 문자변환함수, 숫자변환함수, 날짜변환함수,
	 시스템함수, 숫자함수
  
  2) 복수행 함수[집계 함수, 그룹함수] : 여러개의 행당 하나의 결과값을
     반환하는 함수
     ex) count():레코드 갯수, sum():합계, avg():평균, max():최대값, min():최소값
	 
	 select count(*) from emp; -- 레코드 갯수
	 select sum(sal) from emp; -- 급여 합계
	 select avg(sal) from emp; -- 급여 평균
	 select round(avg(sal), 2) from emp;
	 select min(sal) from emp; -- 최소값
	 select max(sal) from emp; -- 최대값
	 
	 -- 부서별 사원번호, 직원수, 급여합계, 급여평균, 최저급여, 최고급여
	 select deptno, count(*), sum(sal), avg(sal), min(sal), max(sal)
	 from emp
	 group by deptno
	 order by deptno;
	 
	 문제) 위 예제에서 평균값을 출력할때 소수점 2째자리까지만 출력
	 

다. 단일행 함수
 1) 문자함수
    가) chr(아스키코드) : 해당 아스키 코드값에 대한 문자 반환
	select chr(65) from dual;
	
	-- dual : 가상테이블 (오라클에서는 select에서 반드시 from절을 붙여야하기
	때문에 dual이라는 형식적 가상테이블을 쓰게 된다.)
	-- mySQL에서는 select now(); 하면 from절 없이 현재 시간값을 볼 수 있음
	select sysdate from dual; --오라클용
	select now(); --mySQL용
	
	나) ascii(문자) : 문자의 아스키코드값을 반환함
	select ascii('A') from dual;
	
	다) concat(컬럼명, '문자열') : 컬럼에 해당하는 문자열을 붙임
	-- concat(A,B) A와 B를 연결
	-- 결합연산자와 같은 기능 A || B
	select concat(ename, ' 의 직책은 '), job from emp;
	select ename || ' 의 직책은 ' || job from emp;
	select concat('로미오와 ', '줄리엣') from dual;
	
	라) initcap('문자열') : 시작 문자를 대문자로, 다른 문자는 소문자로 반환함
	select initcap('abcDefg') from dual;
	select initcap('hello java') from dual;
	
	마) lower('문자열'), upper('문자열') : 문자열을 소문자로, 대문자로 반환함
	select lower('JAVA'), upper('java') from dual;
	
	바) LPAD('문자열1', 자리수, '문자열2') : 문자열1을 자리수만큼 늘리는데
	왼쪽으로 늘어난 자리수 공간에 문자열2를 채워서 반환함. 문자열2가 생략되면
	공백으로 채워짐
	--9자리, 빈자리는 *로 채움
	select 'abcd', lpad('abcd',9,'*') from dual;
	-- 빈자리를 공백으로 채움
	select lpad('abcd',9) from dual;
	
	사) RPAD('문자열1', 자리수, '문자열2') : 오른쪽으로 공간을 늘림
	--9자리, 빈자리는 *로 채움
	select 'abcd', rpad('abcd',9,'*') from dual;
	-- 빈자리를 공백으로 채움
	select rpad('abcd',9) from dual;

    아) LTRIM('문자열1', '문자열2') : 문자열1에서 문자열2를 왼쪽으로 
	제거한 결과값을 반환
	select LTRIM('ABCD', 'AB') from dual;
	--공백을 제거하는 용도로 쓰임
	select LTRIM('    ABCD', ' ') from dual;
	
	자) RTRIM('문자열1', '문자열2') : 오른쪽에서 제거
	select RTRIM('ABCD    ', '  ') from dual;
	
	차) replace('문자열1', '문자열2', '문자열3') : 문자열1 중에 있는 문자열2를
	문자열3으로 바꾸어서 결과값을 반환함
	select replace('asiancup is international festival', 'asiancup', 'woldcup')
	from dual;
	
	카) substr('문자열', 자리수, 갯수): 문자열의 자리수부터 시작해서 지정된 갯수만큼
	문자를 잘라내서 결과값을 반환함(시작인덱스는 1부터)
	select substr('자바개발자 과정', 4, 3) from dual;
	select ename from emp where substr(ename, 2, 1) = '철';
	
	--문제) 위 select문에서 가운데 이름이 철인 사람을 like를 활용해서 출력
	select ename from emp where ename like '_철_'; 
	
	타) instr('문자열1', '문자열2', 자리수1, 자리수2) : 자리수1부터 자리수2번째의
	문자열2를 찾아서 시작위치를 반환함
	-- '-'이 처음나오는 위치
	select instr('wow-wow-wow-wow', '-') from dual;
	-- '-'이 5번째문자부터 시작해서 처음나오는 하이픈의 위치값
	select instr('wow-wow-wow-wow', '-', 5, 1) from dual;
	
	파) length('문자열') : 문자열의 길이를 반환함
	select length('abcd') from dual;
	select length(rtrim('abcd    ', '  ')) from dual;
	
	하) greatest('값1', '값2', '값3'...) : 가장 큰 값을 반환
	    least('값1', '값2', '값3'...) : 가장 작은 값을 반환
	select greatest(10,30,80,50) from dual;
	select least(10,30,80,50) from dual;
	--문자길이가 제일 긴것을 반환
	select greatest('abc', 'abcd', 'abcdefg') from dual;
	
 2) 날짜 함수
    가) sysdate : 시스템의 현재 날짜를 반환함
	select sysdate from dual;
	
	나) add_months(날짜컬럼 or 날짜데이터, 숫자) : 날짜값에 개월 수를 더해서
	결과값을 반환함
	-- 현재시간에서 3개월 후
	select add_months(sysdate, 3) from dual;
	-- 지정된 시간에서 3개월 전
	select add_months('2013/01/26', -3) from dual;
	-- 입사후 3개월 되는 시점
	select empno,ename,hiredate, add_months(hiredate, 3) 정규직전환일 from emp;
	-- 오늘을 기준으로 100일 후의 날짜
	select sysdate+100 from dual;
	-- 오늘을 기준으로 100일 전의 날짜
	select sysdate-100 from dual;
	
	문제) 사원번호(empno),이름(enmae), 입사일(hiredate)과 입사후90일 되었을 때 
	데이터 출력(윤달까지 자동계산)
	select empno, enmae, hiredate, hiredate+90 from emp;
	
	다) last_day(날짜컬럼 or 날짜데이터) : 파라미터 데이터와 같은 달의 마지막 날짜를
	반환함
	
	select last_day('2019/02/18') from dual;
	
	--입사일 이후 근무일수
	select empno,ename,hiredate,round(sysdate-hiredate) from emp;
	
	문제)-- 입사일 이후 근무일수(근무일수가 3000보다 적은 직원)
	select empno,enmae,hiredate,round(sysdate-hiredate) 근무일수
	from emp
	where sysdate-hiredate < 3000
	order by 근무일수;
	
	--SQL 실행순서 : from => where => select => order by
	
	--살아온 날수 계산
	select studno,name,birthday,(sysdate-birthday) from student;
	
	select studno,name,birthday,(sysdate-birthday)/30 from student;
	
	라) months_between(날짜컬럼1 or 날짜 데이터1, 날짜커럼2 or 날짜 데이터2) :
	두 날짜 사이의 개월 수를 반환함
	select months_between('2013/05/25', '2013/01/05') from dual;
	
	--살아온 날수 계산
	select studno,name,birthday,(sysdate-birthday)/30, 
	months_between(sysdate,birthday)
	from student; --months_between절이 더 정확하다.
	
	마) next_day(날짜컬럼 or 날짜데이터, 숫자 or 요일) : 날짜데이터 이후의
	날짜 중에서 숫자 or 요일로 명시된 첫번째 날짜를 반환함.
	--지금날짜를 기준으로 돌아오는 '토요일'은 몇일이냐?
	select next_day(sysdate, '토') from dual;
	
 3) 문자변환 함수 : to_char(날짜컬럼 or 날짜데이터,'??')
    --??에 올 수 있는 값들
	가) d: 주중의 일을 숫자로표시(1~7)  ex) 일(1), 월(2), 화(3), ...토(7) 
	나) day : 일을 요일로 표시
	다) dd: 1~31 형태로 일을 표시
	라) mm: 01~12형태로 월을 표시
	마) month,mon : 월을 서술형 이름으로 표시
	바) yy: 뒤의 두자리 연도 표시
	사) yyyy: 네자리 연도 표시
	아) dd-mm-yy: 일-월-연도
	자) yyyy-mm-dd: 연도-월-일 
	차) hh, hh12: 1~12 형태로 시를 표시 (비교)hh24
	카) mi: 0~59 형태로 분을 표시
	타) ss: 0~59 형태로 초를 표시
	파) am, pm: 오전, 오후 표시
	하) yyyy-mm-dd am hh:mi:ss day
	    select to_char(sysdate, 'yyyy-mm-dd am hh:mi:ss day') from dual;
		select to_char(sysdate, 'yy-mm-dd am hh24:mi:ss d') from dual;
		
 4) 숫자변환 함수 : to_number('숫자 형태의 문자열')
    select to_number('100')+1 결과값 from dual;
	
 5) 날짜변환 함수 : to_date('날짜 형태의 문자열');
    -- 날짜가 아닌 날짜처럼 보이는 문자를 실제 날짜로 바꿔주는 함수임.
    select to_date('2019-02-18') 결과값 from dual;
	select to_date('17%02%18') 결과값 from dual;
	
 6) 시스템 함수 : user - 현재 오라클에 접속중인 사용자를 반환함   
    select user from dual;
	
 7) 숫자 함수
    가) trunc(숫자1, 자리수) : 숫자1을 소수점 자리수에서 절사
	나) round(숫자1, 자리수) : 숫자1을 소수점 자리수에서 반올림
	다) ceil(숫자1) : 올림
	
	-- 각 직원들에 대해서 직원의 이름과 근속연수(단, 근속연수는 연단위 버림)
	select ename, trunc((sysdate-hiredate)/365) 근속연수 from emp;
	
	select ename, (sysdate-hiredate)/365 근속연수 from emp;
	
	select ename, round((sysdate-hiredate)/365) 근속연수 from emp;
	select ename, ceil((sysdate-hiredate)/365) 근속연수 from emp;
	
 8) 일반함수
    가) NVL(컬럼, 치환할 값) : 컬럼의 값이 null이면 다른 값으로 치환(대체)함수
	문제) 101번 학과(deptno=101) 교수(professor)들의 이름과 급여, bonus, 연봉을 출력.
	--bonus가 null이면 0으로 대체
	
	select name, pay, bonus, (pay*12+ nvl(bonus,0)) 연봉
	from professor
	where deptno=101;
	
	나) decode(A,B, A==B일 때의 값, A<>B일 때의 값) : A<>B일 때의 값을 생략하면
	null로 처리됨, decode 함수의 매개변수의 개수는 다중조건에 의해 늘어날 수 있음
	
	-- 학과코드가 101인 교수만 컴퓨터공학과로 출력할때
	--(101번이 아닌 교수들은 학과명이 null처리)
	select name, deptno, decode(deptno, 101, '컴퓨터공학과') 학과명
	from professor;
	--(101번이 아닌 교수들은 학과명이 기타학과로 처리)
	select name, deptno, decode(deptno, 101, '컴퓨터공학과','기타학과') 학과명
	from professor;
	
	select name,deptno,decode(deptno, 101, '컴퓨터공학과'
	  ,102, '멀티미디어공학과'
	  ,103, '소프트웨어공학과'
	  ,201, '전자공학과','기타학과')
	from professor;  

	--사원
	select empno, ename, decode(deptno, 10, '경리팀'
	                                  , 20, '연구팀'
									  , 30, '총무팀'
									  , 40, '전산팀','기타팀') 소속부서
	from emp;
	
	실습문제) emp테이블에서 각 직원의 이름(ename), 직위(job), 급여를 출력하되,
	단, 급여는 5자리로 나타내며 부족한 자리수는 '*'로 표시 하고(LPAD 활용) sal로 
	별칭처리함, 별칭처리한 sal이 300이상인 직원만 나타내는 sql을 작성해 보세요. 
	
	
	
	실습문제) 각 직원들에 대해서 이름, 근무개월수 나타내되, 현재일자 기준으로
	근무개월수가 100개월 이상인 직원만 출력하되, (months_between 활용)
	근무개월수는 개월 단위를 버림처리(trunc)해서 sql을 작성해 보세요.
	
	
	D:\2강_융합SW\숙제\20190218\이름\20190218.sql
	
	
	 
	 
	 