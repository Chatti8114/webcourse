1. 데이터베이스의 개요
가. 데이터베이스
     빠른 탐색과 검색을 위해 조직된 데이터의 집합체.
1) 왜 데이터베이스가 필요한가?
  가) 파일 시스템 등의 저장소를 사용하여 직접 Database 관리 프로그램을 짜면
       더 효율적이고, 응용 프로그램에 적합하게 제작할 수 있음.
  나) 초기 응용 프로그램에서는 프로그래머가 직접 모든 프로그램을 작성 (OS의
       파일 시스템 등을 이용)
      ex) 응용프로그램 - (급여)데이터 파일1, (세금정산),(퇴직금)...(인사)....

2) 파일 시스템의 문제점
  가) 데이터의 중복(Redundancy)과 일관성(Consistency) 문제
  나) 데이터 접근의 어려움
       각 작업마다 별도의 프로그램 작성
       각각 별도의 방법이 필요할 수 있음.
  다) 데이터 종속성 (Dependency)
       데이터의 포맷이나 접근 방법 등이 프로그램 코드에 종속됨.
       프로그램의 변경이나 데이터 형태, 종류 등의 변경이 불가능
  라) 데이터 독립성 (Isolation)
       여러 프로그램에서 동시에 데이터를 수정하면?
       하나의 수정 작업이 다른 작업에 영향을 줄 수 있음.
  마) 변경의 원자성(Atomicity) 문제
       일련의 작업 중 시스템의 failure가 발생하면??
       ex) 계좌이체 중 내 계좌에서 돈이 나갔는데, 다른 계좌에 입금되기 전에
            정전이 일어난다면?
  바) 동시 사용성(Concurrency) 제어 문제
       동시에 일련의 작업들이 이루어질 경우 올바른 수행을 보장할 수 있는가?
       (일관성의 문제)
       예) 두 명이 동시에 한계좌에서 돈을 인출하려고 한다면?
  사) 데이터 무결성(Integrity) 문제
       Integrity constraints (예. account balance > 0) 가 프로그램 코드 속에
       기술프로그램 코드를 복잡하게 만들고 유지 보수를 어렵게 함.
       제약조건 변경이나 추가 등이 힘들다.
  아) 보안
       보안을 보장하기 힘듦 : 다양한 파일, 다양한 접근 경로, 다양한 프로그램이용

나. DBMS(Datrabase Management System)
   1) 데이터의 종속성과 중복성의 문제 해결
   2) 데이터베이스를 공유할 수 있도록 관리하는 시스템
   3) DBMS의 장단점
      가) 장점
           데이터 중복(redundancy)의 최소화
           데이터의 공유(sharing)
           일관성(consistency)유지
           무결성(integrity)유지
           보안(security) 보장
           표준화(standardization) 용이
           전체 데이터 요구 조정이 원활
     나) 단점
           비용 : H/W, DBMS, 운영비, 교육비, 개발비
           프로그램의 복잡화
           성능상의 오버헤드

4) DBMS의 주요 기능
     가) 데이터의 추가/조회/변경/삭제
     나) 데이터의 무결성(integrity) 유지
     다) 트랜잭션 관리
     라) 데이터의 백업 및 복원

5) 주요 DBMS
     가) Big 3
         Oracle : RDBMS 최초 상용화, RDMS 시장 점유율 가장 높음
	(국내 점유율 특히 높음)
         IBM DB2 : RDBMS 최초개발,  메인프레임 등에서 점유율 높음
         MS-SQL Server : Sybase 코드에 기반
     나) 기타
         Informix, Sybase
         Cubrid
         Main-Memory(Real-time) DB : Altibase
         Embedded DB : SQLite
         My-SQL, MariaDB

다. 오라클 데이터베이스
   1) History
      1979 : Oracle 2 - 최초의 상용 RDBMS (basic SQL)
      1992 : Oracle 7
      1999 : Oracle 8i - 객체 관계형 데이터 모델과 인터넷 관련 기능
      2001 : Oracle 9i - XML과 애플리케이션 서버 기능
      2003 : Oracle 10g - Grid 컴퓨팅을 위해 설계
      2008 : Oracle 11g
      2013 : Oracle 12c
      2018 : Oracle 18c

   2) 오라클의 시동과 종료
       제어판 > 관리도구 > 서비스에서 관련 서비스를 시작/종료
       OracleService(서비스 이름)   참고 : 상용버전 - ORCL
       Oracle(서비스이름)TNSListener

   3) 오라클 설치시 주의사항
       가) 사용자계정, 컴퓨터이름, 디렉토리이름에 한글이 들어가면 안됨
       나) 오라클 삭제시 관련 서비스를 모두 중지시키고 uninstall, (다른 버전의 경우
            Oracle Universal Installer를 실행하여 제거)
   4) 오라클 접근법
       가) 명령프롬프트에서 sqlplus.exe 실행
       나) toad, Oracle SQL Developer등의 툴을 사용하여 실행
   5) 기본 사용자 계정
       가) sys : 오라클의 super 사용자 id, 데이터베이스에서 발생하는 모든 문제를
           처리할 수 있는 권한을 가짐(최상위 관리자 계정),
             sqlplus / as sysdba
       나) system : sys계정과 비슷하지만 차상위 관리자 계정
   6) 시스템 계정 비밀번호 변경방법
       conn / as sysdba
       alter user system identified by 1234;
   7) hr 계정 활성화
       alter user hr identified by hr account unclock;

라. 주요 용어
   1) 데이터베이스(Database) : Relation(Table) 의 집합
   2) 테이블(Table), 릴레이션(Relation) : Tuple(Record)의 집합
   3) 튜플(Tuple), 레코드(Record) : 테이블의 Row, 하나의 유효한 데이터의
                                             컬럼(column)들의 집합
   4) 컬럼(Column), 애트리뷰트(Attribute), 필드(Field) : 릴레이션의 특정 컬럼(열)
   5) 도메인(Domain) : 특정 Attribute가 가질 수 있는 값의 집합
       ex) 나이 0~150세, 키 1~3m, 대학 1~6년
   6) Primary Key : 기본키. 테이블에서 각 row를 유일하게 구분하는 column
   7) Foreign Key : 외래키, 다른 테이블의 column값을 참조
   8) null : 데이터 존재하지 않는 필드
   9) 디그리(degree) : 어트리뷰트의 수를 말한다.
  10) 카디널러티(cardinality) : 튜플들의 수를 말한다.

